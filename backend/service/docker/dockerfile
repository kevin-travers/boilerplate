# syntax=docker/dockerfile:1

# Alpine is chosen for its small footprint
# compared to Ubuntu
## Build
FROM golang:1.19-buster AS build
# set up working directory 
WORKDIR /app
# Download necessary Go modules
COPY go.mod ./
COPY go.sum ./
RUN go mod download

# Copy all go code
COPY ./ ./

# build go 
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o /service ./cmd/

## Deploy to Production
FROM gcr.io/distroless/base-debian10

WORKDIR /

COPY --from=build /service /service

EXPOSE 8080


# informs Docker that the container listens on the specified network ports at runtime
USER nonroot:nonroot

ENTRYPOINT ["/service"]
